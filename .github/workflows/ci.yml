name: CI - Test and Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-docs:
    name: Test Documentation Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/docs
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/docs/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build documentation
        run: npm run build
      
      - name: Check for build errors
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi

  test-gradio:
    name: Test Gradio App
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libpango1.0-dev \
            libcairo2-dev \
            pkg-config \
            python3-dev \
            ffmpeg
      
      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      
      - name: Install dependencies
        run: uv sync
      
      - name: Check Python syntax
        run: |
          uv run python -m py_compile apps/gradio/main.py
      
      - name: Lint with ruff (if available)
        continue-on-error: true
        run: |
          uv run ruff check apps/gradio/ || true

  docker-build:
    name: Test Docker Build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: alfa-manim:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
